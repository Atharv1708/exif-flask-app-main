pipeline {
    agent any

    environment {
        PYTHON = 'C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python313\\python.exe'  // Update to your Python path
        VENV_DIR = "${WORKSPACE}\\venv"
        PYTHONPATH = "${WORKSPACE}"
        UPLOAD_FOLDER = "${WORKSPACE}\\uploads"
    }
    
    stages {
        stage('Prepare Environment') {
            steps {
                bat """
                    IF NOT EXIST "${UPLOAD_FOLDER}" (
                        mkdir "${UPLOAD_FOLDER}"
                    )
                """
            }
        }

        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Setup Virtual Environment') {
            steps {
                bat """
                    IF EXIST "${VENV_DIR}" (
                        rmdir /s /q "${VENV_DIR}"
                    )
                    "${PYTHON}" -m venv "${VENV_DIR}"
                """
            }
        }

        stage('Install Dependencies') {
            steps {
                bat """
                    call "${VENV_DIR}\\Scripts\\activate"
                    python -m pip install --upgrade pip pytest==7.4.0
                    pip install -r requirements.txt --no-cache-dir
                """
            }
        }

        stage('Run Tests') {
            steps {
                bat """
                    call "${VENV_DIR}\\Scripts\\activate"
                    set PYTHONPATH=${WORKSPACE}
                    python -m pytest tests/ --junitxml=test-results.xml -v --disable-warnings
                """
            }
            post {
                always {
                    junit 'test-results.xml'
                }
            }
        }

        stage('Run Application') {
            steps {
                bat """
                    call "${VENV_DIR}\\Scripts\\activate"
                    set PYTHONPATH=${WORKSPACE}
                    set FLASK_APP=app.py
                    start "FlaskApp" python -m flask run --host=0.0.0.0 --port=5000
                """
                sleep 10
            }
        }
    }

    post {
        always {
            bat 'taskkill /F /IM python.exe /T 2>nul || exit 0'
            cleanWs()
        }
    }
}
